package com.inge.edecisiones;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Set;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;
import com.vaadin.ui.Window.CloseEvent;


public class VRegistrarPadron extends CustomComponent implements Window.CloseListener, View{

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private GridLayout gridLayout_3;
	@AutoGenerated
	private Button btn_Volver;
	@AutoGenerated
	private Button btn_Editar;
	@AutoGenerated
	private Button btn_Importar;
	@AutoGenerated
	private Button btn_Eliminar;
	@AutoGenerated
	private Table tbl_Padron;
	@AutoGenerated
	private GridLayout gridLayout_2;
	@AutoGenerated
	private Button btn_Agregar;
	@AutoGenerated
	private TextField textField_1;
	@AutoGenerated
	private Label lbl_Cedula;
	@AutoGenerated
	private Panel Menu;
	@AutoGenerated
	private VerticalLayout verticalLayout_2;
	private RegistrarPadron controlador;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public VRegistrarPadron(final RegistrarPadron controlador) {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		setVisible(true);
		// TODO add user code here
		this.controlador = controlador;
		//text_field
		Menu.setContent(new Menu (controlador.getEdecisiones()));
		Menu.setSizeUndefined();
		
		//table
		//tbl_Padron.setEditable(true);
		tbl_Padron.setSelectable(true);
		tbl_Padron.setMultiSelect(true);
		tbl_Padron.addContainerProperty("Cedula", Integer.class, 0);
		tbl_Padron.setSizeFull();
		/*tbl_Padron.addContainerProperty("Nombre", String.class, "Nombre");
		tbl_Padron.addContainerProperty("Apellido 1", String.class, "Apellido 1");
		tbl_Padron.addContainerProperty("Apellido 2", String.class, "Apellido 2");*/
			
		//agregar items a la tablas
		//button_1
		btn_Agregar.addClickListener(new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				// TODO Auto-generated method stub
				//String nombre = textField_2.getValue();
				int cedula = Integer.parseInt(textField_1.getValue());
				//String datos [] = nombre.split(" ");
				
				if((textField_1.getValue().length() == 9) && (textField_1.getValue().charAt(0)!=0)/*&& (datos.length == 3)*/){
				
					//Ciudadano c = new Ciudadano(datos[0], datos[1], datos[2], cedula);
					//tbl_Padron.addItem(new Object[] {cedula, datos[0], datos[1], datos[2]}, tbl_Padron.size()+1);
					Ciudadano c = new Ciudadano("", "", "", cedula);
					tbl_Padron.addItem(new Object[] {cedula},tbl_Padron.size()+1);
					textField_1.setValue("");
					//textField_2.setValue("");
					controlador.guardar(c);
				}
				else{
					Notification.show("Hay errores en los datos ingresados");
				}
				
			}
		});
		
		//borrar items
		btn_Eliminar.addClickListener(new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				// TODO Auto-generated method stub
				Object list = tbl_Padron.getValue();
				Set datos = Collections.unmodifiableSet((Set)list);
				Object d[] = datos.toArray();
				
				if(d.length>0)
					controlador.eliminar();
				else
					Notification.show("No se han elegido ciudadanos para eliminar");
			}
		});
		
		//cambiar a otra página
		btn_Importar.addClickListener(new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				// TODO Auto-generated method stub
				controlador.getEdecisiones().getNavigator().navigateTo(VRegistrarPadron.this.controlador.IMPORTAR_PADRON);
			}
		});
		
		btn_Editar.addClickListener(new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				// TODO Auto-generated method stub
				Object list = tbl_Padron.getValue();
				Set datos = Collections.unmodifiableSet((Set)list);
				Object d[] = datos.toArray();
				
				if(d.length>1){
					Notification.show("Más de un ciudadano elegido para editar");
				}
				else{
					int cedula = (Integer) tbl_Padron.getItem(d[0]).getItemProperty("Cedula").getValue();
					/*String nombre = (String) tbl_Padron.getItem(d[0]).getItemProperty("Nombre").getValue();
					String apellido1 = (String) tbl_Padron.getItem(d[0]).getItemProperty("Apellido 1").getValue();
					String apellido2 = (String) tbl_Padron.getItem(d[0]).getItemProperty("Apellido 2").getValue();*/
					
					//Ciudadano c = new Ciudadano(nombre, apellido1, apellido2, cedula);
					Ciudadano c = new Ciudadano("", "", "", cedula);
					controlador.editar(c);
				}
			}
		});
		
		btn_Volver.addClickListener(new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				// TODO Auto-generated method stub
				controlador.getEdecisiones().getNavigator().navigateTo(controlador.CONSULTAR_PADRON);
			}
		});
	}

	public void setPadron(Padron p){
		ArrayList<Ciudadano> padron = (ArrayList<Ciudadano>) p.GetCiudadanos();
		
		for(Ciudadano c : padron){
			String[] datos = c.GetName().split(" ");
			//tbl_Padron.addItem(new Object[] {c.GetCedula(), datos[0], datos[1], datos[2]}, tbl_Padron.size()+1);
			tbl_Padron.addItem(new Object[] {c.GetCedula()}, tbl_Padron.size()+1);
		}
			
	}
	
	public void limpiarPadron(){
		tbl_Padron.removeAllItems();
	}

	@Override
	public void windowClose(CloseEvent e) {
		// TODO Auto-generated method stub
		
	}
	
	public ArrayList<Ciudadano> eliminarCiudadanos(){
		ArrayList<Ciudadano> padron = new ArrayList<Ciudadano>();
		
		Object list = tbl_Padron.getValue();
		Set datos = Collections.unmodifiableSet((Set)list);
		Object d[] = datos.toArray();
		for(int i=d.length-1; i>=0; i--){
			//obtener los datos de la tabla
			int cedula = (Integer) tbl_Padron.getItem(d[i]).getItemProperty("Cedula").getValue();
			/**String nombre = (String) tbl_Padron.getItem(d[i]).getItemProperty("Nombre").getValue();
			String apellido1 = (String) tbl_Padron.getItem(d[i]).getItemProperty("Apellido 1").getValue();
			String apellido2 = (String) tbl_Padron.getItem(d[i]).getItemProperty("Apellido 2").getValue();*/
			
			//Ciudadano c = new Ciudadano(nombre, apellido1, apellido2, cedula);
			Ciudadano c = new Ciudadano("","","",cedula);
			padron.add(c);
			
			tbl_Padron.removeItem(d[i]);
		}
		
		return padron;
	}

	@Override
	public void enter(ViewChangeEvent event) {
		// TODO Auto-generated method stub
		
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// Menu
		Menu = buildMenu();
		mainLayout.addComponent(Menu);
		
		// gridLayout_2
		gridLayout_2 = buildGridLayout_2();
		mainLayout.addComponent(gridLayout_2);
		
		// tbl_Padron
		tbl_Padron = new Table();
		tbl_Padron.setImmediate(false);
		tbl_Padron.setWidth("524px");
		tbl_Padron.setHeight("103px");
		tbl_Padron.setInvalidAllowed(false);
		mainLayout.addComponent(tbl_Padron);
		mainLayout.setComponentAlignment(tbl_Padron, new Alignment(48));
		
		// gridLayout_3
		gridLayout_3 = buildGridLayout_3();
		mainLayout.addComponent(gridLayout_3);
		mainLayout.setComponentAlignment(gridLayout_3, new Alignment(48));
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildMenu() {
		// common part: create layout
		Menu = new Panel();
		Menu.setImmediate(false);
		Menu.setWidth("100px");
		Menu.setHeight("30px");
		
		// verticalLayout_2
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("100.0%");
		verticalLayout_2.setMargin(false);
		Menu.setContent(verticalLayout_2);
		
		return Menu;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_2() {
		// common part: create layout
		gridLayout_2 = new GridLayout();
		gridLayout_2.setImmediate(false);
		gridLayout_2.setWidth("450px");
		gridLayout_2.setHeight("-1px");
		gridLayout_2.setMargin(false);
		gridLayout_2.setColumns(5);
		gridLayout_2.setRows(2);
		
		// lbl_Cedula
		lbl_Cedula = new Label();
		lbl_Cedula.setImmediate(false);
		lbl_Cedula.setWidth("-1px");
		lbl_Cedula.setHeight("-1px");
		lbl_Cedula.setValue("Cedula");
		gridLayout_2.addComponent(lbl_Cedula, 0, 0);
		gridLayout_2.setComponentAlignment(lbl_Cedula, new Alignment(33));
		
		// textField_1
		textField_1 = new TextField();
		textField_1.setImmediate(false);
		textField_1.setWidth("-1px");
		textField_1.setHeight("-1px");
		gridLayout_2.addComponent(textField_1, 1, 0);
		
		// btn_Agregar
		btn_Agregar = new Button();
		btn_Agregar.setCaption("Agregar");
		btn_Agregar.setImmediate(true);
		btn_Agregar.setWidth("-1px");
		btn_Agregar.setHeight("-1px");
		gridLayout_2.addComponent(btn_Agregar, 4, 0);
		
		return gridLayout_2;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_3() {
		// common part: create layout
		gridLayout_3 = new GridLayout();
		gridLayout_3.setImmediate(false);
		gridLayout_3.setWidth("374px");
		gridLayout_3.setHeight("-1px");
		gridLayout_3.setMargin(false);
		gridLayout_3.setColumns(4);
		
		// btn_Eliminar
		btn_Eliminar = new Button();
		btn_Eliminar.setCaption("Eliminar");
		btn_Eliminar.setImmediate(true);
		btn_Eliminar.setWidth("-1px");
		btn_Eliminar.setHeight("-1px");
		gridLayout_3.addComponent(btn_Eliminar, 0, 0);
		
		// btn_Importar
		btn_Importar = new Button();
		btn_Importar.setCaption("Importar Padron");
		btn_Importar.setImmediate(true);
		btn_Importar.setWidth("-1px");
		btn_Importar.setHeight("-1px");
		gridLayout_3.addComponent(btn_Importar, 1, 0);
		gridLayout_3.setComponentAlignment(btn_Importar, new Alignment(48));
		
		// btn_Editar
		btn_Editar = new Button();
		btn_Editar.setCaption("Editar");
		btn_Editar.setImmediate(true);
		btn_Editar.setWidth("-1px");
		btn_Editar.setHeight("-1px");
		gridLayout_3.addComponent(btn_Editar, 2, 0);
		gridLayout_3.setComponentAlignment(btn_Editar, new Alignment(48));
		
		// btn_Volver
		btn_Volver = new Button();
		btn_Volver.setCaption("Volver");
		btn_Volver.setImmediate(true);
		btn_Volver.setWidth("-1px");
		btn_Volver.setHeight("-1px");
		gridLayout_3.addComponent(btn_Volver, 3, 0);
		gridLayout_3.setComponentAlignment(btn_Volver, new Alignment(6));
		
		return gridLayout_3;
	}
}
