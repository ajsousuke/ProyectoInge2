package com.inge.edecisiones;

import java.util.List;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Panel;
import com.vaadin.ui.VerticalLayout;

public class VConsultarPadron extends CustomComponent implements View{

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Button btnEditar;
	@AutoGenerated
	private ComboBox cbxPlebiscitos;
	@AutoGenerated
	private Panel panelMenu;
	@AutoGenerated
	private VerticalLayout verticalLayout_1;
	private RegistrarPadron controlador;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public VConsultarPadron(RegistrarPadron controlador) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		this.controlador = controlador;
		panelMenu.setContent(new Menu(controlador.getEdecisiones()));
		panelMenu.setSizeUndefined();
		
		//listeners
		btnEditar.addClickListener(new Button.ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				String nombre = cbxPlebiscitos.getValue().toString();
				VConsultarPadron.this.controlador.setPlebiscito(nombre);
				VConsultarPadron.this.controlador.cargarPadron();
			}
		});
		
		cbxPlebiscitos.setImmediate(true);
		/*cbxPlebiscitos.addValueChangeListener( new Property.ValueChangeListener() {
		
			@Override
			public void valueChange(ValueChangeEvent event) {
				// TODO Auto-generated method stub
				if( cbxPlebiscitos.getValue() == null ) {
					btnEditar.setEnabled(false);
				}
				else {
					if( cbxPlebiscitos.getValue().toString().isEmpty() ) {
						btnEditar.setEnabled(false);
					}
					else {
						btnEditar.setEnabled(true);
					}
				}
			}
		});*/
	}

	public void llenarListaPlebiscitos(List<String> lista_nombres) {
		
		// tratar de borrar los plebiscitos que tuviera antes
		if (! cbxPlebiscitos.removeAllItems() ) {
			Notification.show("Error en VConsultarPadron");
		}
		
		if( lista_nombres.isEmpty() ) {
			cbxPlebiscitos.setCaption("No hay plebiscitos para editar");	
		}
		else {
			cbxPlebiscitos.setCaption("Seleccione un plebiscito y presione \"Editar\"");
			
			for(String nombre_plebiscito : lista_nombres) {
				cbxPlebiscitos.addItem(nombre_plebiscito);				
			}
		}		
	}
	
	@Override
	public void enter(ViewChangeEvent event) {
		// TODO Auto-generated method stub
		
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// panelMenu
		panelMenu = buildPanelMenu();
		mainLayout.addComponent(panelMenu);
		
		// cbxPlebiscitos
		cbxPlebiscitos = new ComboBox();
		cbxPlebiscitos
				.setCaption("Seleccione un plebiscito y presione \"Editar\"");
		cbxPlebiscitos.setImmediate(false);
		cbxPlebiscitos.setWidth("-1px");
		cbxPlebiscitos.setHeight("-1px");
		mainLayout.addComponent(cbxPlebiscitos);
		
		// btnEditar
		btnEditar = new Button();
		btnEditar.setCaption("Editar");
		btnEditar.setImmediate(true);
		btnEditar.setWidth("-1px");
		btnEditar.setHeight("-1px");
		mainLayout.addComponent(btnEditar);
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPanelMenu() {
		// common part: create layout
		panelMenu = new Panel();
		panelMenu.setImmediate(false);
		panelMenu.setWidth("100px");
		panelMenu.setHeight("30px");
		
		// verticalLayout_1
		verticalLayout_1 = new VerticalLayout();
		verticalLayout_1.setImmediate(false);
		verticalLayout_1.setWidth("100.0%");
		verticalLayout_1.setHeight("100.0%");
		verticalLayout_1.setMargin(false);
		panelMenu.setContent(verticalLayout_1);
		
		return panelMenu;
	}

}
